@page "/verify-otp"
@inject NavigationManager Navigation
@inject HttpClient Http
@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorage
@inject JwtAuthStateProvider AuthProvider
@using BloodBankManagementSystem.UI.Services;
@using BloodBankManagementSystem.Core.Models
@code {
    [Parameter] public string Email { get; set; }
}

<h3>Verify OTP</h3>

<div class="form-container">
    <EditForm Model="otpModel" OnValidSubmit="Verify">
        <DataAnnotationsValidator />

        <InputText @bind-Value="otpModel.Otp" placeholder="Enter OTP" class="input-text" />
        <button type="submit" class="submit-btn">Verify</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(Message))
    {
        <p class="message">@Message</p>
    }
</div>

@code {
    private VerifyOtpRequest otpModel = new();
    private string Message;

    protected override void OnInitialized()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        otpModel.Email = query["email"];
    }

    private async Task Verify()
    {
        var res = await Http.PostAsJsonAsync("api/auth/verify-otp", otpModel);

        if (res.IsSuccessStatusCode)
        {
            Message = "OTP verified! You can now reset your password.";
            await Task.Delay(2000);
            Navigation.NavigateTo($"/reset-password-after-otp?email={otpModel.Email}&otp={otpModel.Otp}");
        }
        else
        {
            Message = "Invalid OTP.";
        }
    }
}
