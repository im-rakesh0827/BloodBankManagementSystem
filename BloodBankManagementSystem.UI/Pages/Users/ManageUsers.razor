@page "/users"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using BloodBankManagementSystem.Core.Models;
<CustomActionComponent  OnFilterOptionChanged="HandleApplyFilter" 
                        OnExportData="HandleExportData"
                        PageTitle="Registered Users"
                        OnCreateRecord="OpenCreatePopUp">
</CustomActionComponent>

@if (FilteredUsersList is null)
{
    <p>Loading...</p>
}
else if (!FilteredUsersList.Any())
{
    <p>No users found.</p>
}
else
{
    <div style="overflow-x: auto;">
        <RadzenDataGrid TItem="User"
                        Data="@FilteredUsersList"
                        Count="@FilteredUsersList.Count"
                        AllowPaging="true"
                        PageSize="10"
                        AllowSorting="true"
                        AllowFiltering="true"
                        AllowColumnResize="true"
                        AllowColumnReorder="true"
                        Responsive="true"
                        Class="w-100"
                        Style="min-width: 1000px;">
            <Columns>
                <RadzenDataGridColumn TItem="User" Property="FirstName" Title="First Name" Width="120px" />
                <RadzenDataGridColumn TItem="User" Property="LastName" Title="Last Name" Width="120px" />
                <RadzenDataGridColumn TItem="User" Property="Email" Title="Email" Width="180px" />
                <RadzenDataGridColumn TItem="User" Property="Phone" Title="Phone" Width="130px" />
                <RadzenDataGridColumn TItem="User" Property="Role" Title="Role" Width="100px" />
                <RadzenDataGridColumn TItem="User" Property="State" Title="State" Width="120px" />
                <RadzenDataGridColumn TItem="User" Property="District" Title="District" Width="120px" />
                <RadzenDataGridColumn TItem="User" Property="Address" Title="Full Address" Width="200px" />
                <RadzenDataGridColumn TItem="User" Title="Actions" Filterable="false" Sortable="false" Width="130px">
                    <Template Context="user">
                        <div class="d-flex gap-1 flex-nowrap">
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => ShowUsertHistory(user))" Icon="history" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => OpenEditOrUpdatePopUp(user))" Icon="edit" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => DeleteUser(user.Id))" Icon="delete" />
                        </div>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
}

@if (IsCreateUpdatePopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <RegisterUser OnClose="CloseAddUserModal"
                          OnUserAddedOrUpdated="RefreshUserList"
                          SelectedUserData="SelectedUser"
                          IsCreateUpdateUserPopup="IsCreateUpdatePopup" />
        </div>
    </div>
}

@if (ShowHistoryPopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <UserHistoryComponent 
                UserDetails="SelectedUser"
                OnClose="CloseHistoryPopup" />
        </div>
    </div>
}
