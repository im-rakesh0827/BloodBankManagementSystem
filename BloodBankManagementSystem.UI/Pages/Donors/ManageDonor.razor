@page "/manageDonor"
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using BloodBankManagementSystem.Core.Models;

@if (IsLoading)
{
    <LoaderComponent></LoaderComponent>
}

<CustomActionComponent  OnFilterOptionChanged="HandleApplyFilter" 
                        OnExportData="HandleExportData"
                        PageTitle="Registered Donor"
                        OnCreateRecord="OpenCreatePopUp">
</CustomActionComponent>

@if (FilteredDonorsList == null)
{
    <p>Loading...</p>
}
else if (!FilteredDonorsList.Any())
{
    <p>No donors found.</p>
}
else
{
    <div style="overflow-x: auto;">
        <RadzenDataGrid TItem="Donor"
                        Data="@FilteredDonorsList"
                        Count="@FilteredDonorsList.Count"
                        AllowPaging="true"
                        PageSize="10"
                        AllowSorting="true"
                        AllowFiltering="true"
                        AllowColumnResize="true"
                        AllowColumnReorder="true"
                        Responsive="true"
                        Class="w-100"
                        Style="min-width: 1100px;">
            <Columns>
                <RadzenDataGridColumn TItem="Donor" Property="FirstName" Title="First Name" Width="120px" />
                <RadzenDataGridColumn TItem="Donor" Property="LastName" Title="Last Name" Width="120px" />
                <RadzenDataGridColumn TItem="Donor" Property="Email" Title="Email" Width="180px" />
                <RadzenDataGridColumn TItem="Donor" Property="Phone" Title="Phone" Width="130px" />
                <RadzenDataGridColumn TItem="Donor" Property="BloodGroup" Title="Blood Group" Width="100px" />
                <RadzenDataGridColumn TItem="Donor" Property="Gender" Title="Gender" Width="100px" />
                <RadzenDataGridColumn TItem="Donor" Property="Age" Title="Age" Width="80px" />
                <RadzenDataGridColumn TItem="Donor" Property="Weight" Title="Weight" Width="100px" />
                <RadzenDataGridColumn TItem="Donor" Property="Country" Title="Country" Width="120px" />
                <RadzenDataGridColumn TItem="Donor" Property="State" Title="State" Width="120px" />
                <RadzenDataGridColumn TItem="Donor" Property="District" Title="District" Width="120px" />
                <RadzenDataGridColumn TItem="Donor" Property="PinCode" Title="PinCode" Width="100px" />
                <RadzenDataGridColumn TItem="Donor" Property="Address" Title="Address" Width="200px" />
                <RadzenDataGridColumn TItem="Donor" Property="LastDonationDate" Title="Last Donation Date" Width="150px">
                    <Template Context="donor">
                        @donor.LastDonationDate?.ToString("yyyy-MM-dd")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Donor" Property="IsEligible" Title="Eligible" Width="100px">
                    <Template Context="donor">
                        @(donor.IsEligible ? "Yes" : "No")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Donor" Title="Actions" Filterable="false" Sortable="false" Width="130px">
                    <Template Context="donor">
                        <div class="d-flex gap-1 flex-nowrap">
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => ShowDonorHistory(donor))" Icon="history" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => OpenEditOrUpdatePopUp(donor))" Icon="edit" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => DeleteDonor(donor.Id))" Icon="delete" />
                        </div>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
}

<!-- Modal Popup -->
@if (IsCreateUpdatePopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <RegisterDonor 
                SelectedDonorData="SelectedDonor"
                OnClose="HandleCancelOrClose"
                OnDonorAddedOrUpdated="RefreshDonorList"
                IsCreateUpdateDonorPopup="IsCreateUpdatePopup" />
        </div>
    </div>
}

@if (ShowHistoryPopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <DonorHistoryComponent 
                DonorDetails="SelectedDonor"
                OnClose="CloseHistoryPopup" />
        </div>
    </div>
}