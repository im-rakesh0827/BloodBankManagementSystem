@page "/patient/manage"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using BloodBankManagementSystem.Core.Models;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]

 @if(IsLoading){
        <LoaderComponent></LoaderComponent>
    }

<CustomActionComponent  OnFilterOptionChanged="HandleApplyFilter" 
                        OnExportData="HandleExportData"
                        PageTitle="Registered Patients"
                        OnCreateRecord="OpenCreatePopUp">
</CustomActionComponent>


@if (FilteredPatientsList is null)
{
    <p>Loading patients...</p>
}
else if (!FilteredPatientsList.Any())
{
    <p>No patients found.</p>
}
else
{
    <!-- Wrap the grid in a scrollable container -->
    <div style="overflow-x: auto; width: 100%;">
    <RadzenDataGrid TItem="Patient"
                    Data="@FilteredPatientsList"
                    Count="@FilteredPatientsList.Count"
                    AllowPaging="true"
                    PageSize="10"
                    AllowSorting="true"
                    AllowFiltering="true"
                    AllowColumnReorder="true"
                    RowSelect="@OnRowSelect"
                    FrozenColumns="FrozenColumns.Right"
                    Class="w-100"
                    Style="min-width: 800px;">
        <Columns>
            <RadzenDataGridColumn TItem="Patient" Property="FirstName" Title="First Name" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="LastName" Title="Last Name" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="BloodTypeNeeded" Title="Blood Type Needed" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="PhoneNumber" Title="Phone Number" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="Country" Title="Country" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="State" Title="State" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="District" Title="District" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="PinCode" Title="PinCode" Width="160px" />
            <RadzenDataGridColumn TItem="Patient" Property="Address" Title="Full Address" Width="300px" />
            <RadzenDataGridColumn TItem="Patient"
                                  Title="Actions"
                                  Filterable="false"
                                  Sortable="false"
                                  Frozen="true"
                                  Width="180px">
                <Template Context="patient">
                    <div class="d-flex gap-1 flex-nowrap">
                        <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => ShowPatientHistory(patient))">
                            <HistoryIcon></HistoryIcon>
                        </RadzenButton>
                        <RadzenButton ButtonStyle="ButtonStyle.Light"  Click="@(() => OpenEditOrUpdatePopUp(patient))">
                            <EditViewIcon></EditViewIcon>
                        </RadzenButton>
                        <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="delete" Click="@(() => DeletePatient(patient.PatientID))" />
                    </div>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>

}

<!-- Create & Update Popup -->
@if (IsCreateUpdatePopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <RegisterPatient SelectedPatientData="SelectedPatient"
                             OnClose="HandleCancelOrClose"
                             OnPatientUpdated="RefreshPatientList"
                             IsCreateUpdatePatientPopup="IsCreateUpdatePopup" />
        </div>
    </div>
}

<!-- History Popup -->
@if (ShowHistoryPopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <PatientHistoryComponent PatientDetails="SelectedPatient"
                                     OnClose="CloseHistoryPopup" />
        </div>
    </div>
}
