@page "/request/create"
@inject HttpClient Http
@inject NavigationManager Nav
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]

@if (IsLoading)
{
     <LoaderComponent></LoaderComponent>
}

@if (IsCreateUpdateRequestPopup)
{
    <div class="position-relative">
        <button type="button" class="btn-close position-absolute top-0 end-0 m-1" aria-label="Close" @onclick="HandleCancelOrClose"></button>
    </div>
}

<h5 class="page-header">@Title</h5>

@* @if (isSuccess)
{
    <div class="alert alert-success">Blood request submitted successfully!</div>
}
else if (hasError)
{
    <div class="alert alert-danger">An error occurred while submitting the request.</div>
} *@

<EditForm Model="requestModel" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    @* <ValidationSummary /> *@
    <Blazorise.ValidationSummary />
    <div class="row">
        <!-- Left Column -->
        <div class="col-md-4">
            <div class="mb-3">
                <label class="form-label">Patient Name:</label>
                <InputText class="form-control" 
                           @bind-Value="requestModel.PatientName" 
                           tabindex="1"  
                           disabled="@IsReadOnly"/>
            </div>

            <div class="mb-3">
                <label class="form-label">Blood Group:</label>
                <InputSelect class="form-control" @bind-Value="requestModel.BloodGroup" tabindex="4" disabled="@IsReadOnly">
                    <option value="">Select Blood Group</option>
                    @foreach (var group in BloodGroupsList)
                    {
                        <option value="@group">@group</option>
                    }
                </InputSelect>
            </div>

            <div class="mb-3">
                <label class="form-label">Gender:</label>
                <InputSelect class="form-control" @bind-Value="requestModel.Gender" tabindex="7" disabled="@IsReadOnly">
                    <option value="">Select Gender</option>
                    @foreach (var gender in GenderList)
                    {
                        <option value="@gender">@gender</option>
                    }
                </InputSelect>
            </div>
        </div>

        <!-- Middle Column -->
        <div class="col-md-4">
            <div class="mb-3">
                <label class="form-label">Units Required:</label>
                <InputNumber class="form-control" @bind-Value="requestModel.UnitsRequired" tabindex="2" disabled="@IsReadOnly"/>
            </div>

            <div class="mb-3">
                <label class="form-label">Location:</label>
                <InputText class="form-control" @bind-Value="requestModel.Location" tabindex="5" disabled="@(IsReadOnly)"/>
            </div>

            <div class="mb-3">
                <label class="form-label">Contact Number:</label>
                <InputText class="form-control" @bind-Value="requestModel.ContactNumber" tabindex="8" disabled="@IsReadOnly"/>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-md-4">
            <div class="mb-3">
                <label class="form-label">Description:</label>
                <InputTextArea class="form-control" @bind-Value="requestModel.Description" tabindex="3" disabled="@IsReadOnly" />
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center gap-3 mt-2">
        <button type="submit" class="btn btn-primary" tabindex="9" disabled="@IsReadOnly">@SaveUpdateButton <i class="fa fa-save"></i></button>
        <button type="button" class="btn btn-secondary" tabindex="10" @onclick="HandleClearRestore" disabled="@IsReadOnly">@ClearResetButton <i class="fa fa-undo"></i></button>
    </div>
</EditForm>
