@page "/request/manage"
@using BloodBankManagementSystem.Core.Models;
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@if (IsLoading)
{
    <LoaderComponent></LoaderComponent>
}
<CustomActionComponent  OnFilterOptionChanged="HandleApplyFilter" 
                        OnExportData="HandleExportData"
                        PageTitle="Blood Requests"
                        OnCreateRecord="OpenCreatePopUp">
</CustomActionComponent>

<button class="btn btn-success btn-sm" style="margin-bottom:1rem;" @onclick="HandleDelete" Id="deleteButton" disabled="@(!IsAnyRecordSelected)">Remove</button>


@if (FilteredRequestsList is null)
{
    <p>Loading...</p>
}
else if (!FilteredRequestsList.Any())
{
    <p>No blood requests found.</p>
}
else
{
    <p>Total Records : @RequestCount</p>
    <div style="overflow-x: auto; width: 100%;">
        <RadzenDataGrid TItem="BloodRequest"
                        Data="@FilteredRequestsList"
                        Count="@FilteredRequestsList.Count"
                        AllowPaging="true"
                        PageSize="10"
                        AllowSorting="true"
                        AllowFiltering="true"
                        AllowColumnResize="true"
                        AllowColumnReorder="true"
                        RowSelect="@OnRowSelect"
                        Class="w-100"
                        Style="min-width: 900px;">
            <Columns>

                <RadzenDataGridColumn TItem="BloodRequest" 
                      Title="Select" 
                      Sortable="false" 
                      Filterable="false" 
                      TextAlign="TextAlign.Center" 
                      Frozen="true"
                      Width="90px">
                    <Template Context="data">
                        <RadzenCheckBox @bind-Value="@data.IsDeleteSelected"
                        Disabled="@((data.Status == "Approved"))" TValue="bool" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="BloodRequest" Property="RequesterType" Title="Requester Type" Width="150px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="PatientName" Title="Requester Name" Width="160px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="Gender" Title="Gender" Width="100px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="BloodGroup" Title="Blood Group" Width="120px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="UnitsRequired" Title="Units Required" Width="130px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="ContactNumber" Title="Contact Number" Width="160px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="Email" Title="Email" Width="160px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="Location" Title="Address" Width="160px" />
                <RadzenDataGridColumn TItem="BloodRequest" Property="RequestedDate" Title="Requested Date" Width="140px">
                    <Template Context="request">
                        @request.RequestedDate.ToShortDateString()
                    </Template>
                </RadzenDataGridColumn>
                @* <RadzenDataGridColumn TItem="BloodRequest" Property="Status" Title="Status" Width="160px" /> *@
                <RadzenDataGridColumn TItem="BloodRequest" Title="Status" Width="160px">
                    <Template Context=request>
                        @if (request.Status == "Approved")
                        {
                            <RadzenIcon Icon="check_circle" Style="color: green; font-size: 20px; vertical-align: middle;" />
                            <span style="margin-left: 6px;">Approved</span>
                        }
                        else if (request.Status == "Rejected")
                        {
                            <RadzenIcon Icon="cancel" Style="color: red; font-size: 20px; vertical-align: middle;" />
                            <span style="margin-left: 6px;">Rejected</span>
                        }
                        else if (request.Status == "Pending")
                        {
                            <RadzenIcon Icon="hourglass_empty" Style="color: orange; font-size: 20px; vertical-align: middle;" />
                            <span style="margin-left: 6px;">Pending</span>
                        }
                        else
                        {
                            @request.Status
                        }
                    </Template>
                </RadzenDataGridColumn>



                <RadzenDataGridColumn TItem="BloodRequest"
                                      Title="Edit/View"
                                      Filterable="false"
                                      Sortable="false"
                                      TextAlign="TextAlign.Center"
                                      Width="90px">
                    <Template Context="request">
                        <div class="flex-nowrap">

                        <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => OpenEditOrUpdatePopUp(request))">
                                    <EditViewIcon />
                                </RadzenButton>

                            @* @if (IsAdmin || !IsAdmin)
                            {
                                <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => OpenEditOrUpdatePopUp(request))">
                                    <EditViewIcon />
                                </RadzenButton>

                                <RadzenButton ButtonStyle="ButtonStyle.Light"
                                              Disabled="@(request.Status.Equals("Approved", StringComparison.OrdinalIgnoreCase))"
                                              Click="@(() => DeleteRequest(request.Id))">
                                    <DeleteIcon />
                                </RadzenButton>
                            }

                            <RadzenButton ButtonStyle="ButtonStyle.Success"
                                          Disabled="@(request.Status.Equals("Approved", StringComparison.OrdinalIgnoreCase))"
                                          Click="@(() => UpdateRequestStatus(request.Id, "Approve"))">
                                Approve
                            </RadzenButton>

                            <RadzenButton ButtonStyle="ButtonStyle.Info"
                                          Disabled="@(request.Status.Equals("Rejected", StringComparison.OrdinalIgnoreCase))"
                                          Click="@(() => UpdateRequestStatus(request.Id, "Reject"))">
                                Reject
                            </RadzenButton> *@
                        </div>
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="BloodRequest"
                                      Title="History"
                                      Filterable="false"
                                      Sortable="false"
                                      TextAlign="TextAlign.Center"
                                      Width="90px">
                    <Template Context="request">
                        <div class="flex-nowrap">
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => OpenEditOrUpdatePopUp(request))">
                                    <HistoryIcon />
                             </RadzenButton>
                        </div>
                    </Template>
                </RadzenDataGridColumn>


            </Columns>
        </RadzenDataGrid>
    </div>
}

<!-- Create/Edit Request Modal -->
@if (IsCreateUpdatePopup)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <RequestBlood 
                SelectedRequest="SelectedRequest"
                OnClose="HandleCreateUpdatePopup"
                OnRequestAddedOrUpdated="RefreshBloodRequestList"
                IsCreateUpdateRequestPopup="IsCreateUpdatePopup"
            />
        </div>
    </div>
}
